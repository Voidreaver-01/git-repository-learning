// TEST.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
//

#include <iostream>
#include<string>
using namespace std;

int Find_Root(int s[], int index)
{
	while (1)
	{
		if (s[index] <= -1)
		{
			return index;
		}
		index = s[index];
	}
}

void  Union(int s[], int root1, int root2)
{
	//root1 root2的根
	int Root1 = Find_Root(s, root1);
	int Root2 = Find_Root(s, root2);
	if (Root1 == Root2)
	{
		return;
	}
	//把root2作为root1的儿子
	else if(s[Root2]>= s[Root1])
	{
		s[Root1] += s[Root2];
		s[Root2] = Root1;
		return;
	}
	else
	{
		s[Root2] += s[Root1];
		s[Root1] = Root2;
		return;
	}

}

void Test()
{
	int arr[8];
	for (int  i = 0;i<8;i++)
	{
		arr[i] = -1;
	}
	Union(arr, 0, 1);
	Union(arr, 0, 3);
	Union(arr, 2, 4);
	Union(arr, 7, 1);
	Union(arr, 0, 6);
	Union(arr, 5, 6);
	for (int i = 0; i < 8; i++)
	{
		cout << arr[i] << endl;
	}

}

int main()
{

	Test();

   // std::cout << "Hello World!\n";
}

// 运行程序: Ctrl + F5 或调试 >“开始执行(不调试)”菜单
// 调试程序: F5 或调试 >“开始调试”菜单

// 入门使用技巧: 
//   1. 使用解决方案资源管理器窗口添加/管理文件
//   2. 使用团队资源管理器窗口连接到源代码管理
//   3. 使用输出窗口查看生成输出和其他消息
//   4. 使用错误列表窗口查看错误
//   5. 转到“项目”>“添加新项”以创建新的代码文件，或转到“项目”>“添加现有项”以将现有代码文件添加到项目
//   6. 将来，若要再次打开此项目，请转到“文件”>“打开”>“项目”并选择 .sln 文件
